{
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "airbnb"
  ],
  "overrides": [
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "tsconfigRootDir": ".",
    "createDefaultProgram": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "react",
    "prettier",
    "import",
    "import-newlines"
  ],
  "rules": {
    "semi": ["error", "always"],
    "no-unused-vars": "warn",
    "no-unused-expressions": "off",
    "camelcase": "off",
    "comma-dangle": [ "error", "always-multiline" ],
    "function-paren-newline": [ "error", "consistent" ],
    "max-len": [
      "warn",
      {
        "code": 180,
        "comments": 100,
        "tabWidth": 2,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "newline-before-return": "error",
    "no-multiple-empty-lines": [ "error", { "max":  1 } ],
    "no-confusing-arrow": [ "error", { "allowParens": true } ],
    "no-irregular-whitespace": [ "error", { "skipStrings": true } ],
    "keyword-spacing": "error",
    "react/sort-comp": [
      "error",
      {
        "order": [
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "state",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/ban-ts-comment": "warn",
    "react/prop-types": "off",
    "react/prefer-stateless-function": "warn",
    "react/jsx-filename-extension": [ "error", { "extensions": [".spec.js", ".jsx", ".tsx"] }],
    "react/style-prop-object": "off",
    "react/destructuring-assignment": "off",
    "react/function-component-definition": "off",
    "no-plusplus": "off",
    "no-else-return": ["error", { "allowElseIf": true }],
    "prefer-destructuring": "off",
    "prefer-const": "error",
    "func-style": ["error", "expression",  { "allowArrowFunctions": true }],
    "no-useless-constructor": "off",
    "arrow-parens": ["error", "as-needed", { "requireForBlockBody": false }],
    "import-newlines/enforce": ["error", { "items": 3, "max-len": 120, "semi": true }],
    "import/no-extraneous-dependencies": ["error", {"devDependencies": true}],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["block-like", "block", "for"], "next": "*" },
      { "blankLine": "always", "prev": "*", "next": ["block-like", "block", "for"] },
      { "blankLine": "always", "prev": "*", "next": ["const", "let"]},
      { "blankLine": "always", "prev": ["const", "let"], "next": "*"},
      { "blankLine": "always", "prev": ["function"], "next": ["function"]},
      { "blankLine": "any", "prev": ["const", "let"], "next": ["const", "let"]}
    ]
  }
}


